name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  validate:
    name: Validate Manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate manifest
        run: |
          bash scripts/validate_manifest.sh

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build channel package
        run: |
          mkdir -p build
          cp manifest build/
          cp -r source build/
          find build -name ".DS_Store" -delete
      
      - name: Create distributable ZIP
        run: |
          mkdir -p dist
          cd build && zip -r ../dist/DarttsIPTV.zip . -x "*.DS_Store"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DarttsIPTV-${{ github.sha }}
          path: dist/DarttsIPTV.zip
          retention-days: 30

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run unit tests
        run: |
          bash tests/run_tests.sh
      
      - name: Check for syntax errors
        run: |
          echo "Checking BrightScript files..."
          find source -type f \( -name "*.brs" -o -name "*.xml" \) | while read file; do
            echo "Checking $file"
          done
          echo "âœ“ Syntax check complete (manual validation required)"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ validate, build, test ]
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build release package
        run: |
          mkdir -p build dist
          cp manifest build/
          cp -r source build/
          find build -name ".DS_Store" -delete
          cd build && zip -r ../dist/DarttsIPTV.zip .
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/DarttsIPTV.zip
          asset_name: DarttsIPTV-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

  sideload:
    name: Sideload to Roku (Optional)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build for sideload
        run: |
          mkdir -p build
          cp manifest build/
          cp -r source build/
      
      - name: Sideload to Roku
        if: ${{ secrets.ROKU_IP != '' && secrets.ROKU_PASSWORD != '' }}
        run: |
          bash scripts/sideload.sh \
            ${{ secrets.ROKU_IP }} \
            rokudev \
            ${{ secrets.ROKU_PASSWORD }} \
            build
        continue-on-error: true
